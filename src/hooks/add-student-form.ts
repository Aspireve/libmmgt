import { StudentData } from "@/types/student";
import { useCreate } from "@refinedev/core";
import { useRouter } from "next/navigation";
import { FieldValues, useForm } from "react-hook-form";
import { toast } from "sonner";

export const useAddStudentForm = () => {
  const router = useRouter();
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<Partial<StudentData>>({
    defaultValues: {
      student_name: "",
      department: "",
      email: "",
      phone_no: "",
      address: "",
      roll_no: undefined,
      year_of_admission: undefined,
      password: "",
      confirm_password: "",
      date_of_birth: undefined,
      gender: undefined,
      institute_uuid: undefined,
      image_field: undefined,
    },
  });
  
  const { mutate, isLoading } = useCreate();

  const onSubmit = (data: FieldValues) => {
    const hardcodedInstituteId = "828f0d33-258f-4a92-a235-9c1b30d8882b";
    const hardcodedInstituteName = "TIA";
    console.log(data);

    const studentData: Partial<StudentData> = {
      student_id: "", // Will be generated by backend
      student_uuid: "",
      student_name: data.student_name,
      department: data.department,
      email: data.email,
      phone_no: data.phone_no,
      address: data.address || undefined,
      roll_no: data.roll_no ? Number(data.roll_no) : undefined,
      year_of_admission: data.year_of_admission || undefined,
      password: data.password,
      confirm_password: data.confirm_password,
      institute_id: data.institute_id,
      institute_name: hardcodedInstituteName,
      is_archived: false,
      date_of_birth: data.date_of_birth || undefined,
      gender: data.gender || undefined,
      institute_uuid: hardcodedInstituteId || undefined,
      image_field: data.image_field || undefined,
    };

    mutate(
      { resource: "student/create", values: studentData },
      {
        onSuccess: () => {
          toast.success("Student added successfully!");
          router.push("/student-page");
        },
        onError: (error: any) => {
          toast.error("Error adding student: " + error.message);
        },
      }
    );
  };

  return { register, handleSubmit, errors, onSubmit, isLoading };
};
